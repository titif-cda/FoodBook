id: UnitTest
language: CSharp
name:
  Default: UnitTest
qualifiedName:
  Default: UnitTest
type: Assembly
modifiers: {}
items:
- id: UnitTest
  commentId: N:UnitTest
  language: CSharp
  name:
    CSharp: UnitTest
    VB: UnitTest
  nameWithType:
    CSharp: UnitTest
    VB: UnitTest
  qualifiedName:
    CSharp: UnitTest
    VB: UnitTest
  type: Namespace
  assemblies:
  - UnitTest
  modifiers: {}
  items:
  - id: UnitTest.RestaurantServiceTest
    commentId: T:UnitTest.RestaurantServiceTest
    language: CSharp
    name:
      CSharp: RestaurantServiceTest
      VB: RestaurantServiceTest
    nameWithType:
      CSharp: RestaurantServiceTest
      VB: RestaurantServiceTest
    qualifiedName:
      CSharp: UnitTest.RestaurantServiceTest
      VB: UnitTest.RestaurantServiceTest
    type: Class
    assemblies:
    - UnitTest
    namespace: UnitTest
    source:
      remote:
        path: Server/UnitTest/RestaurantServiceTest.cs
        branch: master
        repo: https://github.com/titif-cda/FoodBook.git
      id: RestaurantServiceTest
      path: ../UnitTest/RestaurantServiceTest.cs
      startLine: 10
    syntax:
      content:
        CSharp: public class RestaurantServiceTest
        VB: Public Class RestaurantServiceTest
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: UnitTest.RestaurantServiceTest.TestGetIngredientID
      commentId: M:UnitTest.RestaurantServiceTest.TestGetIngredientID
      language: CSharp
      name:
        CSharp: TestGetIngredientID()
        VB: TestGetIngredientID()
      nameWithType:
        CSharp: RestaurantServiceTest.TestGetIngredientID()
        VB: RestaurantServiceTest.TestGetIngredientID()
      qualifiedName:
        CSharp: UnitTest.RestaurantServiceTest.TestGetIngredientID()
        VB: UnitTest.RestaurantServiceTest.TestGetIngredientID()
      type: Method
      assemblies:
      - UnitTest
      namespace: UnitTest
      source:
        remote:
          path: Server/UnitTest/RestaurantServiceTest.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: TestGetIngredientID
        path: ../UnitTest/RestaurantServiceTest.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            [Fact]

            public void TestGetIngredientID()
          VB: >-
            <Fact>

            Public Sub TestGetIngredientID
      overload: UnitTest.RestaurantServiceTest.TestGetIngredientID*
      attributes:
      - type: Xunit.FactAttribute
        ctor: Xunit.FactAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: BLL.Services
  commentId: N:BLL.Services
  language: CSharp
  name:
    CSharp: BLL.Services
    VB: BLL.Services
  nameWithType:
    CSharp: BLL.Services
    VB: BLL.Services
  qualifiedName:
    CSharp: BLL.Services
    VB: BLL.Services
  type: Namespace
  assemblies:
  - UnitTest
  modifiers: {}
  items:
  - id: BLL.Services.RestaurantService
    commentId: T:BLL.Services.RestaurantService
    language: CSharp
    name:
      CSharp: RestaurantService
      VB: RestaurantService
    nameWithType:
      CSharp: RestaurantService
      VB: RestaurantService
    qualifiedName:
      CSharp: BLL.Services.RestaurantService
      VB: BLL.Services.RestaurantService
    type: Class
    assemblies:
    - UnitTest
    namespace: BLL.Services
    source:
      remote:
        path: Server/UnitTest/Services/FakeRestaurantService.cs
        branch: master
        repo: https://github.com/titif-cda/FoodBook.git
      id: RestaurantService
      path: ../UnitTest/Services/FakeRestaurantService.cs
      startLine: 15
    syntax:
      content:
        CSharp: 'class RestaurantService : IRestaurantService'
        VB: >-
          Class RestaurantService

              Implements IRestaurantService
    inheritance:
    - System.Object
    implements:
    - BLL.Services.IRestaurantService
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - class
      VB:
      - Class
    items:
    - id: BLL.Services.RestaurantService.IngredientsDB
      commentId: F:BLL.Services.RestaurantService.IngredientsDB
      language: CSharp
      name:
        CSharp: IngredientsDB
        VB: IngredientsDB
      nameWithType:
        CSharp: RestaurantService.IngredientsDB
        VB: RestaurantService.IngredientsDB
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.IngredientsDB
        VB: BLL.Services.RestaurantService.IngredientsDB
      type: Field
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: IngredientsDB
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 17
      syntax:
        content:
          CSharp: public List<Ingredient> IngredientsDB
          VB: Public IngredientsDB As List(Of Ingredient)
        return:
          type: System.Collections.Generic.List{BO.Entity.Ingredient}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredient)
      commentId: M:BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredient)
      language: CSharp
      name:
        CSharp: CreateIngredient(Ingredient)
        VB: CreateIngredient(Ingredient)
      nameWithType:
        CSharp: RestaurantService.CreateIngredient(Ingredient)
        VB: RestaurantService.CreateIngredient(Ingredient)
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredient)
        VB: BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredient)
      type: Method
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: CreateIngredient
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 25
      syntax:
        content:
          CSharp: public Task<Ingredient> CreateIngredient(Ingredient ingredient)
          VB: Public Function CreateIngredient(ingredient As Ingredient) As Task(Of Ingredient)
        parameters:
        - id: ingredient
          type: BO.Entity.Ingredient
        return:
          type: System.Threading.Tasks.Task{BO.Entity.Ingredient}
      overload: BLL.Services.RestaurantService.CreateIngredient*
      implements:
      - BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredient)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
      commentId: M:BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
      language: CSharp
      name:
        CSharp: CreateMenu(Menu)
        VB: CreateMenu(Menu)
      nameWithType:
        CSharp: RestaurantService.CreateMenu(Menu)
        VB: RestaurantService.CreateMenu(Menu)
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
        VB: BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
      type: Method
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: CreateMenu
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 30
      syntax:
        content:
          CSharp: public Task<Menu> CreateMenu(Menu Menus)
          VB: Public Function CreateMenu(Menus As Menu) As Task(Of Menu)
        parameters:
        - id: Menus
          type: BO.Entity.Menu
        return:
          type: System.Threading.Tasks.Task{BO.Entity.Menu}
      overload: BLL.Services.RestaurantService.CreateMenu*
      implements:
      - BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BLL.Services.RestaurantService.CreateRepas(BO.Entity.Repas)
      commentId: M:BLL.Services.RestaurantService.CreateRepas(BO.Entity.Repas)
      language: CSharp
      name:
        CSharp: CreateRepas(Repas)
        VB: CreateRepas(Repas)
      nameWithType:
        CSharp: RestaurantService.CreateRepas(Repas)
        VB: RestaurantService.CreateRepas(Repas)
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.CreateRepas(BO.Entity.Repas)
        VB: BLL.Services.RestaurantService.CreateRepas(BO.Entity.Repas)
      type: Method
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: CreateRepas
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 35
      syntax:
        content:
          CSharp: public Task<Repas> CreateRepas(Repas Repas)
          VB: Public Function CreateRepas(Repas As Repas) As Task(Of Repas)
        parameters:
        - id: Repas
          type: BO.Entity.Repas
        return:
          type: System.Threading.Tasks.Task{BO.Entity.Repas}
      overload: BLL.Services.RestaurantService.CreateRepas*
      implements:
      - BLL.Services.IRestaurantService.CreateRepas(BO.Entity.Repas)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BLL.Services.RestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
      commentId: M:BLL.Services.RestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
      language: CSharp
      name:
        CSharp: CreateTypeRepas(TypeRepas)
        VB: CreateTypeRepas(TypeRepas)
      nameWithType:
        CSharp: RestaurantService.CreateTypeRepas(TypeRepas)
        VB: RestaurantService.CreateTypeRepas(TypeRepas)
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
        VB: BLL.Services.RestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
      type: Method
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: CreateTypeRepas
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 40
      syntax:
        content:
          CSharp: public Task<TypeRepas> CreateTypeRepas(TypeRepas tRepas)
          VB: Public Function CreateTypeRepas(tRepas As TypeRepas) As Task(Of TypeRepas)
        parameters:
        - id: tRepas
          type: BO.Entity.TypeRepas
        return:
          type: System.Threading.Tasks.Task{BO.Entity.TypeRepas}
      overload: BLL.Services.RestaurantService.CreateTypeRepas*
      implements:
      - BLL.Services.IRestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BLL.Services.RestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
      commentId: M:BLL.Services.RestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
      language: CSharp
      name:
        CSharp: GetAllIngredients(PageRequest)
        VB: GetAllIngredients(PageRequest)
      nameWithType:
        CSharp: RestaurantService.GetAllIngredients(PageRequest)
        VB: RestaurantService.GetAllIngredients(PageRequest)
      qualifiedName:
        CSharp: BLL.Services.RestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
        VB: BLL.Services.RestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
      type: Method
      assemblies:
      - UnitTest
      namespace: BLL.Services
      source:
        remote:
          path: Server/UnitTest/Services/FakeRestaurantService.cs
          branch: master
          repo: https://github.com/titif-cda/FoodBook.git
        id: GetAllIngredients
        path: ../UnitTest/Services/FakeRestaurantService.cs
        startLine: 45
      syntax:
        content:
          CSharp: public Task<PageResponse<Ingredient>> GetAllIngredients(PageRequest pageRequest)
          VB: Public Function GetAllIngredients(pageRequest As PageRequest) As Task(Of PageResponse(Of Ingredient))
        parameters:
        - id: pageRequest
          type: BO.DTO.Requests.PageRequest
        return:
          type: System.Threading.Tasks.Task{BO.DTO.Responses.PageResponse{BO.Entity.Ingredient}}
      overload: BLL.Services.RestaurantService.GetAllIngredients*
      implements:
      - BLL.Services.IRestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  UnitTest.RestaurantServiceTest.TestGetIngredientID*:
    name:
      CSharp:
      - id: UnitTest.RestaurantServiceTest.TestGetIngredientID*
        name: TestGetIngredientID
        nameWithType: RestaurantServiceTest.TestGetIngredientID
        qualifiedName: UnitTest.RestaurantServiceTest.TestGetIngredientID
      VB:
      - id: UnitTest.RestaurantServiceTest.TestGetIngredientID*
        name: TestGetIngredientID
        nameWithType: RestaurantServiceTest.TestGetIngredientID
        qualifiedName: UnitTest.RestaurantServiceTest.TestGetIngredientID
    isDefinition: true
    commentId: Overload:UnitTest.RestaurantServiceTest.TestGetIngredientID
  Xunit:
    name:
      CSharp:
      - name: Xunit
        nameWithType: Xunit
        qualifiedName: Xunit
        isExternal: true
      VB:
      - name: Xunit
        nameWithType: Xunit
        qualifiedName: Xunit
    isDefinition: true
    commentId: N:Xunit
  Xunit.FactAttribute:
    name:
      CSharp:
      - id: Xunit.FactAttribute
        name: FactAttribute
        nameWithType: FactAttribute
        qualifiedName: Xunit.FactAttribute
        isExternal: true
      VB:
      - id: Xunit.FactAttribute
        name: FactAttribute
        nameWithType: FactAttribute
        qualifiedName: Xunit.FactAttribute
        isExternal: true
    isDefinition: true
    parent: Xunit
    commentId: T:Xunit.FactAttribute
  Xunit.FactAttribute.#ctor:
    name:
      CSharp:
      - id: Xunit.FactAttribute.#ctor
        name: FactAttribute
        nameWithType: FactAttribute.FactAttribute
        qualifiedName: Xunit.FactAttribute.FactAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Xunit.FactAttribute.#ctor
        name: FactAttribute
        nameWithType: FactAttribute.FactAttribute
        qualifiedName: Xunit.FactAttribute.FactAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Xunit.FactAttribute
    commentId: M:Xunit.FactAttribute.#ctor
  UnitTest.RestaurantServiceTest:
    name:
      CSharp:
      - id: UnitTest.RestaurantServiceTest
        name: RestaurantServiceTest
        nameWithType: RestaurantServiceTest
        qualifiedName: UnitTest.RestaurantServiceTest
      VB:
      - id: UnitTest.RestaurantServiceTest
        name: RestaurantServiceTest
        nameWithType: RestaurantServiceTest
        qualifiedName: UnitTest.RestaurantServiceTest
    isDefinition: true
    commentId: T:UnitTest.RestaurantServiceTest
  UnitTest:
    name:
      CSharp:
      - name: UnitTest
        nameWithType: UnitTest
        qualifiedName: UnitTest
      VB:
      - name: UnitTest
        nameWithType: UnitTest
        qualifiedName: UnitTest
    isDefinition: true
    commentId: N:UnitTest
  BLL.Services:
    name:
      CSharp:
      - name: BLL.Services
        nameWithType: BLL.Services
        qualifiedName: BLL.Services
      VB:
      - name: BLL.Services
        nameWithType: BLL.Services
        qualifiedName: BLL.Services
    isDefinition: true
    commentId: N:BLL.Services
  BLL.Services.IRestaurantService:
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService
        name: IRestaurantService
        nameWithType: IRestaurantService
        qualifiedName: BLL.Services.IRestaurantService
      VB:
      - id: BLL.Services.IRestaurantService
        name: IRestaurantService
        nameWithType: IRestaurantService
        qualifiedName: BLL.Services.IRestaurantService
    isDefinition: true
    parent: BLL.Services
    commentId: T:BLL.Services.IRestaurantService
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{BO.Entity.Ingredient}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BO.Entity.Ingredient}
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{BO.Entity.Ingredient}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{BO.Entity.Ingredient}
  BO.Entity:
    name:
      CSharp:
      - name: BO.Entity
        nameWithType: BO.Entity
        qualifiedName: BO.Entity
      VB:
      - name: BO.Entity
        nameWithType: BO.Entity
        qualifiedName: BO.Entity
    isDefinition: true
    commentId: N:BO.Entity
  BO.Entity.Ingredient:
    name:
      CSharp:
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      VB:
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
    isDefinition: true
    parent: BO.Entity
    commentId: T:BO.Entity.Ingredient
  BLL.Services.RestaurantService.CreateIngredient*:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService.CreateIngredient*
        name: CreateIngredient
        nameWithType: RestaurantService.CreateIngredient
        qualifiedName: BLL.Services.RestaurantService.CreateIngredient
      VB:
      - id: BLL.Services.RestaurantService.CreateIngredient*
        name: CreateIngredient
        nameWithType: RestaurantService.CreateIngredient
        qualifiedName: BLL.Services.RestaurantService.CreateIngredient
    isDefinition: true
    commentId: Overload:BLL.Services.RestaurantService.CreateIngredient
  BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredient):
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredient)
        name: CreateIngredient
        nameWithType: IRestaurantService.CreateIngredient
        qualifiedName: BLL.Services.IRestaurantService.CreateIngredient
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredient)
        name: CreateIngredient
        nameWithType: IRestaurantService.CreateIngredient
        qualifiedName: BLL.Services.IRestaurantService.CreateIngredient
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: BLL.Services.IRestaurantService
    commentId: M:BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredient)
  System.Threading.Tasks.Task{BO.Entity.Menu}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{BO.Entity.Menu}
  BO.Entity.Menu:
    name:
      CSharp:
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
      VB:
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
    isDefinition: true
    parent: BO.Entity
    commentId: T:BO.Entity.Menu
  BLL.Services.RestaurantService.CreateMenu*:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService.CreateMenu*
        name: CreateMenu
        nameWithType: RestaurantService.CreateMenu
        qualifiedName: BLL.Services.RestaurantService.CreateMenu
      VB:
      - id: BLL.Services.RestaurantService.CreateMenu*
        name: CreateMenu
        nameWithType: RestaurantService.CreateMenu
        qualifiedName: BLL.Services.RestaurantService.CreateMenu
    isDefinition: true
    commentId: Overload:BLL.Services.RestaurantService.CreateMenu
  BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu):
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
        name: CreateMenu
        nameWithType: IRestaurantService.CreateMenu
        qualifiedName: BLL.Services.IRestaurantService.CreateMenu
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
        name: CreateMenu
        nameWithType: IRestaurantService.CreateMenu
        qualifiedName: BLL.Services.IRestaurantService.CreateMenu
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Menu
        name: Menu
        nameWithType: Menu
        qualifiedName: BO.Entity.Menu
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: BLL.Services.IRestaurantService
    commentId: M:BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
  System.Threading.Tasks.Task{BO.Entity.Repas}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{BO.Entity.Repas}
  BO.Entity.Repas:
    name:
      CSharp:
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
      VB:
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
    isDefinition: true
    parent: BO.Entity
    commentId: T:BO.Entity.Repas
  BLL.Services.RestaurantService.CreateRepas*:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService.CreateRepas*
        name: CreateRepas
        nameWithType: RestaurantService.CreateRepas
        qualifiedName: BLL.Services.RestaurantService.CreateRepas
      VB:
      - id: BLL.Services.RestaurantService.CreateRepas*
        name: CreateRepas
        nameWithType: RestaurantService.CreateRepas
        qualifiedName: BLL.Services.RestaurantService.CreateRepas
    isDefinition: true
    commentId: Overload:BLL.Services.RestaurantService.CreateRepas
  BLL.Services.IRestaurantService.CreateRepas(BO.Entity.Repas):
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService.CreateRepas(BO.Entity.Repas)
        name: CreateRepas
        nameWithType: IRestaurantService.CreateRepas
        qualifiedName: BLL.Services.IRestaurantService.CreateRepas
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: BLL.Services.IRestaurantService.CreateRepas(BO.Entity.Repas)
        name: CreateRepas
        nameWithType: IRestaurantService.CreateRepas
        qualifiedName: BLL.Services.IRestaurantService.CreateRepas
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.Repas
        name: Repas
        nameWithType: Repas
        qualifiedName: BO.Entity.Repas
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: BLL.Services.IRestaurantService
    commentId: M:BLL.Services.IRestaurantService.CreateRepas(BO.Entity.Repas)
  System.Threading.Tasks.Task{BO.Entity.TypeRepas}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{BO.Entity.TypeRepas}
  BO.Entity.TypeRepas:
    name:
      CSharp:
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
      VB:
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
    isDefinition: true
    parent: BO.Entity
    commentId: T:BO.Entity.TypeRepas
  BLL.Services.RestaurantService.CreateTypeRepas*:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService.CreateTypeRepas*
        name: CreateTypeRepas
        nameWithType: RestaurantService.CreateTypeRepas
        qualifiedName: BLL.Services.RestaurantService.CreateTypeRepas
      VB:
      - id: BLL.Services.RestaurantService.CreateTypeRepas*
        name: CreateTypeRepas
        nameWithType: RestaurantService.CreateTypeRepas
        qualifiedName: BLL.Services.RestaurantService.CreateTypeRepas
    isDefinition: true
    commentId: Overload:BLL.Services.RestaurantService.CreateTypeRepas
  BLL.Services.IRestaurantService.CreateTypeRepas(BO.Entity.TypeRepas):
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
        name: CreateTypeRepas
        nameWithType: IRestaurantService.CreateTypeRepas
        qualifiedName: BLL.Services.IRestaurantService.CreateTypeRepas
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: BLL.Services.IRestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
        name: CreateTypeRepas
        nameWithType: IRestaurantService.CreateTypeRepas
        qualifiedName: BLL.Services.IRestaurantService.CreateTypeRepas
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.Entity.TypeRepas
        name: TypeRepas
        nameWithType: TypeRepas
        qualifiedName: BO.Entity.TypeRepas
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: BLL.Services.IRestaurantService
    commentId: M:BLL.Services.IRestaurantService.CreateTypeRepas(BO.Entity.TypeRepas)
  System.Threading.Tasks.Task{BO.DTO.Responses.PageResponse{BO.Entity.Ingredient}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.DTO.Responses.PageResponse`1
        name: PageResponse
        nameWithType: PageResponse
        qualifiedName: BO.DTO.Responses.PageResponse
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.DTO.Responses.PageResponse`1
        name: PageResponse
        nameWithType: PageResponse
        qualifiedName: BO.DTO.Responses.PageResponse
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BO.Entity.Ingredient
        name: Ingredient
        nameWithType: Ingredient
        qualifiedName: BO.Entity.Ingredient
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{BO.DTO.Responses.PageResponse{BO.Entity.Ingredient}}
  BO.DTO.Requests:
    name:
      CSharp:
      - name: BO.DTO.Requests
        nameWithType: BO.DTO.Requests
        qualifiedName: BO.DTO.Requests
      VB:
      - name: BO.DTO.Requests
        nameWithType: BO.DTO.Requests
        qualifiedName: BO.DTO.Requests
    isDefinition: true
    commentId: N:BO.DTO.Requests
  BO.DTO.Requests.PageRequest:
    name:
      CSharp:
      - id: BO.DTO.Requests.PageRequest
        name: PageRequest
        nameWithType: PageRequest
        qualifiedName: BO.DTO.Requests.PageRequest
      VB:
      - id: BO.DTO.Requests.PageRequest
        name: PageRequest
        nameWithType: PageRequest
        qualifiedName: BO.DTO.Requests.PageRequest
    isDefinition: true
    parent: BO.DTO.Requests
    commentId: T:BO.DTO.Requests.PageRequest
  BLL.Services.RestaurantService.GetAllIngredients*:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService.GetAllIngredients*
        name: GetAllIngredients
        nameWithType: RestaurantService.GetAllIngredients
        qualifiedName: BLL.Services.RestaurantService.GetAllIngredients
      VB:
      - id: BLL.Services.RestaurantService.GetAllIngredients*
        name: GetAllIngredients
        nameWithType: RestaurantService.GetAllIngredients
        qualifiedName: BLL.Services.RestaurantService.GetAllIngredients
    isDefinition: true
    commentId: Overload:BLL.Services.RestaurantService.GetAllIngredients
  BLL.Services.IRestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest):
    name:
      CSharp:
      - id: BLL.Services.IRestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
        name: GetAllIngredients
        nameWithType: IRestaurantService.GetAllIngredients
        qualifiedName: BLL.Services.IRestaurantService.GetAllIngredients
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.DTO.Requests.PageRequest
        name: PageRequest
        nameWithType: PageRequest
        qualifiedName: BO.DTO.Requests.PageRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: BLL.Services.IRestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
        name: GetAllIngredients
        nameWithType: IRestaurantService.GetAllIngredients
        qualifiedName: BLL.Services.IRestaurantService.GetAllIngredients
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BO.DTO.Requests.PageRequest
        name: PageRequest
        nameWithType: PageRequest
        qualifiedName: BO.DTO.Requests.PageRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: BLL.Services.IRestaurantService
    commentId: M:BLL.Services.IRestaurantService.GetAllIngredients(BO.DTO.Requests.PageRequest)
  BLL.Services.RestaurantService:
    name:
      CSharp:
      - id: BLL.Services.RestaurantService
        name: RestaurantService
        nameWithType: RestaurantService
        qualifiedName: BLL.Services.RestaurantService
      VB:
      - id: BLL.Services.RestaurantService
        name: RestaurantService
        nameWithType: RestaurantService
        qualifiedName: BLL.Services.RestaurantService
    isDefinition: true
    commentId: T:BLL.Services.RestaurantService
